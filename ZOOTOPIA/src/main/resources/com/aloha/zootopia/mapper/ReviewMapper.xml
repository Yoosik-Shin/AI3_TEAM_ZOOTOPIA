<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aloha.zootopia.mapper.ReviewMapper">

    <!-- Result Map -->
    <resultMap id="ReviewResultMap" type="com.aloha.zootopia.domain.Review">
        <id property="id" column="id"/>
        <result property="productId" column="product_id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="rating" column="rating"/>
        <result property="content" column="content"/>
        <result property="createdDate" column="created_date"/>
        <result property="updatedDate" column="updated_date"/>
    </resultMap>

    <!-- 특정 상품의 리뷰 목록 조회 (최신순) -->
    <select id="findByProductId" parameterType="Long" resultMap="ReviewResultMap">
        SELECT r.*, u.username as user_name
        FROM reviews r
        LEFT JOIN users u ON r.user_id = u.id
        WHERE r.product_id = #{productId}
        ORDER BY r.created_date DESC
    </select>

    <!-- 리뷰 등록 -->
    <insert id="insert" parameterType="com.aloha.zootopia.domain.Review" 
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO reviews (
            product_id, user_id, rating, content, created_date, updated_date
        ) VALUES (
            #{productId}, #{userId}, #{rating}, #{content}, 
            NOW(), NOW()
        )
    </insert>

    <!-- 리뷰 수정 -->
    <update id="update" parameterType="com.aloha.zootopia.domain.Review">
        UPDATE reviews SET
            rating = #{rating},
            content = #{content},
            updated_date = NOW()
        WHERE id = #{id}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="delete" parameterType="Long">
        DELETE FROM reviews WHERE id = #{id}
    </delete>

    <!-- 특정 상품의 평균 평점 조회 -->
    <select id="getAverageRating" parameterType="Long" resultType="Double">
        SELECT ROUND(AVG(rating), 1) as avg_rating
        FROM reviews
        WHERE product_id = #{productId}
    </select>

    <!-- 특정 상품의 리뷰 개수 조회 -->
    <select id="getReviewCount" parameterType="Long" resultType="int">
        SELECT COUNT(*) as review_count
        FROM reviews
        WHERE product_id = #{productId}
    </select>

    <!-- 사용자별 특정 상품 리뷰 조회 -->
    <select id="findByProductIdAndUserId" resultMap="ReviewResultMap">
        SELECT r.*, u.username as user_name
        FROM reviews r
        LEFT JOIN users u ON r.user_id = u.id
        WHERE r.product_id = #{productId} AND r.user_id = #{userId}
    </select>

</mapper>
